plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
}

group 'com.pakybytes'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

configurations {
    deployerJars
}

/** Repos
 */
repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases' }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // Logging
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
    implementation group: 'ch.qos.logback', name: 'logback-access', version: '1.2.3'

    // Encryption
    implementation group: "org.abstractj.kalium", name: "kalium", version: "0.8.0"

    // Tests
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.3.2'

    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.23.4'
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.23.4'
    testCompile group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.6.0'

    // Maven
    deployerJars "org.apache.maven.wagon:wagon-ssh:2.2"
    deployerJars "org.apache.maven.wagon:wagon-http:2.2"
}


/** Maven
 */
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://localhost/tmp/myRepo/")
        }
    }
}

uploadArchives {
    repositories{
        mavenDeployer {
            
            configuration = configurations.deployerJars
            
            repository(url: "scp://repos.mycompany.com/releases") {
                authentication(userName: "me", password: "myPassword")
            }

            pom.project {
                licenses {
                    license {
                        name 'MIT'
                        url 'https://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}


publishing {
    publications {
        maven(MavenPublication) {
            artifact('some-artifact.tar.gz') {
                extension 'tar.gz'
            }
        }
    }
    repositories {
        maven {
            name 'deploy'
            url deployRepoUrl
            credentials {
                username = deployRepoUsername
                password = deployRepoPassword
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'My Library'
                description = 'A concise description of my library'
                url = 'http://www.example.com/library'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'johnd'
                        name = 'John Doe'
                        email = 'john.doe@example.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://example.com/my-library.git'
                    developerConnection = 'scm:git:ssh://example.com/my-library.git'
                    url = 'http://example.com/my-library/'
                }
            }
        }
    }
}